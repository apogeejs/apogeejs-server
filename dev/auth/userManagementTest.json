{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":1,"lists":{"npm module":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"UserManagementTest","children":{"main":{"name":"main","type":"apogee.Folder","children":{"someUsers":{"name":"someUsers","type":"apogee.JsonMember","updateData":{"data":[["email","password"],["sutter@intransix.com","asdhasdf"],["other_guy@gmail.com","xxx"]]}}}},"dbConfig":{"name":"dbConfig","type":"apogee.Folder","children":{"getConnection":{"name":"getConnection","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"var mysql = require('mysql');\n\nreturn mysql.createConnection(config.data);","supplementalCode":""}},"getQueryPromise":{"name":"getQueryPromise","type":"apogee.FunctionMember","updateData":{"argList":["sql"],"functionBody":"let connection = getConnection();\n\nvar queryPromise = new Promise((resolve,reject) => {\n    connection.connect(function(err) {\n        if(err) {\n            reject(err.message);\n        }\n        else {    \n            connection.query(sql, function(err,result) {\n                if(err) {\n                    reject(err.message);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        }\n        connection.end();\n    });\n});\n\nreturn queryPromise;\n","supplementalCode":""}},"getPreparedQueryPromise":{"name":"getPreparedQueryPromise","type":"apogee.FunctionMember","updateData":{"argList":["sql","parameters"],"functionBody":"let connection = getConnection();\n\nvar queryPromise = new Promise((resolve,reject) => {\n    connection.connect(function(err) {\n        if(err) {\n            reject(err.message);\n        }\n        else {    \n            connection.query(sql, parameters, function(err,result) {\n                if(err) {\n                    reject(err.message);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        }\n        //just quit - don't bother handling an error for now\n        connection.end();\n    });\n});\n\nreturn queryPromise;","supplementalCode":""}},"config":{"name":"config","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"DB Configuration\"\n    },\n    {\n        type: \"textField\",\n        label: \"Host: \",\n        size: 40,\n        key: \"host\"\n    },\n    {\n        type: \"textField\",\n        label: \"User: \",\n        size: 40,\n        key: \"user\"\n    },\n    {\n        type: \"textField\",\n        label: \"Password: \",\n        size: 40,\n        key: \"password\"\n    },\n    {\n        type: \"textField\",\n        label: \"Database: \",\n        size: 40,\n        key: \"database\"\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"host":"localhost","user":"root","password":"admin","database":"conman"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}}}},"createUser":{"name":"createUser","type":"apogee.Folder","children":{"runCommandFlag":{"name":"runCommandFlag","type":"apogee.JsonMember","updateData":{"data":false}},"createUserSql":{"name":"createUserSql","type":"apogee.JsonMember","updateData":{"data":"insert into user_info (first_name,family_name,email,phone,pass_key) \nvalues (?,?,?,?,?);"}},"newUserParams":{"name":"newUserParams","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let params = [];\ninput = createUserForm.data;\n\n//req\nif(input.firstName) {\n    params.push(input.firstName)\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}\n\n//req\nif(input.familyName) {\n    params.push(input.familyName)\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}\n\n//req\nif(input.email) {\n    params.push(input.email)\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}\n\n//req\nif(input.phone) {\n    params.push(input.phone)\n}\nelse {\n   return apogeeutil.INVALID_VALUE;\n}\n\n\n//req\nif(passKey) {\n    params.push(passKey)\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}\n\nreturn params;","supplementalCode":""}},"createUserForm":{"name":"createUserForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Create User\"\n    },\n    {\n        type: \"textField\",\n        label: \"First Name: \",\n        size: 40,\n        key: \"firstName\"\n    },\n    {\n        type: \"textField\",\n        label: \"Family Name: \",\n        size: 40,\n        key: \"familyName\"\n    },\n    {\n        type: \"textField\",\n        label: \"Email: \",\n        size: 40,\n        key: \"email\"\n    },\n    {\n        type: \"textField\",\n        label: \"Phone: \",\n        size: 40,\n        key: \"phone\"\n    },\n    {\n        type: \"textField\",\n        label: \"Password: \",\n        size: 40,\n        key: \"password\"\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"firstName":"Dave","familyName":"Sutter","email":"sutter@intransix.com","phone":"650-996-7303","password":"asdhasdf"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"createUserAction":{"name":"createUserAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if((newUserParams)&&(runCommandFlag === true)) {\n    return dbConfig.getPreparedQueryPromise(createUserSql,newUserParams);\n}\nelse {\n    return \"-- INVALID QUERY --\";\n}","supplementalCode":""}},"passKey":{"name":"passKey","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let rawPassword = createUserForm.data.password;\n\nif(rawPassword) {\n    return encryption.getEncryptedPasswordPromise(rawPassword);\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}}}},"getUsers":{"name":"getUsers","type":"apogee.Folder","children":{"sql":{"name":"sql","type":"apogee.JsonMember","updateData":{"data":"select * from user_info;"}},"result":{"name":"result","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return dbConfig.getQueryPromise(sql);","supplementalCode":""}}}},"encryption":{"name":"encryption","type":"apogee.Folder","children":{"SALT_ROUNDS":{"name":"SALT_ROUNDS","type":"apogee.JsonMember","updateData":{"data":10}},"getEncryptedPasswordPromise":{"name":"getEncryptedPasswordPromise","type":"apogee.FunctionMember","updateData":{"argList":["rawPassword"],"functionBody":"if(rawPassword) {\n    let bcrypt = require(\"bcrypt\");\n    let encryptedPromise = new Promise( (resolve,reject) => {\n            bcrypt.hash(rawPassword, SALT_ROUNDS, function(err, hash) {\n                if(err) {\n                    reject(err);\n                }\n                else {\n                    resolve(hash);\n                }\n        });\n    })\n    return encryptedPromise;\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"isMatchPromise":{"name":"isMatchPromise","type":"apogee.FunctionMember","updateData":{"argList":["rawPassword","passKey"],"functionBody":"if((rawPassword)&&(passKey)) {\n    let bcrypt = require(\"bcrypt\");\n    let matchPromise = new Promise( (resolve,reject) => {\n        bcrypt.compare(rawPassword, passKey, function(err, result) {\n            if(err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    })\n    return matchPromise;\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}}}},"login":{"name":"login","type":"apogee.Folder","children":{"loginForm":{"name":"loginForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    admin.getCommandMessenger().dataCommand(\"loginInfo\",formValue);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"User Info\"\n    },\n    {\n        type: \"textField\",\n        label: \"Email: \",\n        size: 50,\n        key: \"email\"\n    },\n    {\n        type: \"textField\",\n        label: \"Password: \",\n        size: 50,\n        password: true,\n        key: \"password\"\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Submit\"\n    }\n]","supplementalCode":""}},"loginInfo":{"name":"loginInfo","type":"apogee.JsonMember","updateData":{"data":{"email":"sutter@intransix.com","password":"asdhasdf"}}},"passwordMatch":{"name":"passwordMatch","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let rawPassword = loginInfo.password;\nif((lookupUserAction)&&(runCommandFlag === true)) {\n    if(lookupUserAction.length === 1) {\n        let referencePassKey = lookupUserAction[0].pass_key;\n\n        if((rawPassword)&&(referencePassKey)) {\n            return encryption.isMatchPromise(rawPassword,referencePassKey);\n        }\n    }\n}\n\n//if we get here we didn't have proper inputs\nreturn apogeeutil.INVALID_VALUE;","supplementalCode":""}},"runCommandFlag":{"name":"runCommandFlag","type":"apogee.JsonMember","updateData":{"data":false}},"lookupUserSql":{"name":"lookupUserSql","type":"apogee.JsonMember","updateData":{"data":"select * from user_info where email = ?; "}},"lookupUserAction":{"name":"lookupUserAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let email = loginInfo.email;\nlet rawPassword = loginInfo.password;\n\nif((email)&&(rawPassword)&&(runCommandFlag === true)) {\n    return dbConfig.getPreparedQueryPromise(lookupUserSql,[email]);\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}}}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"User Management"}]},{"type":"paragraph","content":[{"type":"text","text":"This workspace has some functions for user management."}]},{"type":"apogeeComponent","attrs":{"name":"someUsers","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"someUsers":{"type":"apogeeapp.JsonCell","dataView":"Grid","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":120},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"dbConfig":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Database Configuration"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the configuration for our database connections."}]},{"type":"apogeeComponent","attrs":{"name":"config","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets a connection."}]},{"type":"apogeeComponent","attrs":{"name":"getConnection","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets a promise for the given SQL query."}]},{"type":"apogeeComponent","attrs":{"name":"getQueryPromise","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets a promise for the parameterized SQL query."}]},{"type":"paragraph","content":[{"type":"text","text":"The parameters object should be an array of parameter values, given in the order specified in the SQL query."}]},{"type":"apogeeComponent","attrs":{"name":"getPreparedQueryPromise","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"getConnection":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"getQueryPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"getPreparedQueryPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"config":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"height":280,"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"createUser":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Create User"}]},{"type":"heading2","content":[{"type":"text","text":"Input"}]},{"type":"apogeeComponent","attrs":{"name":"createUserForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"For development, we will save the above data in the form. We will also use the flag below and only run our query when this tells us to."}]},{"type":"apogeeComponent","attrs":{"name":"runCommandFlag","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Create User Logic"}]},{"type":"apogeeComponent","attrs":{"name":"createUserSql","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"passKey","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"newUserParams","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"createUserAction","id":0,"state":""}}]}},"children":{"runCommandFlag":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"createUserSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"newUserParams":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"createUserForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":false,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"createUserAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"passKey":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"getUsers":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Get Users"}]},{"type":"paragraph","content":[{"type":"text","text":"This is a simple test. Below is an SQL query we want to do."}]},{"type":"apogeeComponent","attrs":{"name":"sql","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the result:"}]},{"type":"apogeeComponent","attrs":{"name":"result","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"sql":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"result":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"encryption":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"apogeeComponent","attrs":{"name":"getEncryptedPasswordPromise","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"isMatchPromise","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"SALT_ROUNDS","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"heading2"}]}},"children":{"SALT_ROUNDS":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getEncryptedPasswordPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"isMatchPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"login":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Login"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a form to log in"}]},{"type":"apogeeComponent","attrs":{"name":"loginForm","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"runCommandFlag","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the entered user info:"}]},{"type":"apogeeComponent","attrs":{"name":"loginInfo","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"User Data Lookup"}]},{"type":"apogeeComponent","attrs":{"name":"lookupUserSql","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"lookupUserAction","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"passwordMatch","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"loginForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"loginInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"passwordMatch":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"runCommandFlag":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"lookupUserSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"lookupUserAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}