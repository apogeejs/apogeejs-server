{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":1,"lists":{"npm module":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"UserManagementTest","children":{"main":{"name":"main","type":"apogee.Folder","children":{"someUsers":{"name":"someUsers","type":"apogee.JsonMember","updateData":{"data":[["email","password"],["sutter@intransix.com","asdhasdf"],["other_guy@gmail.com","xxx"],["blow@gmail.com","uuu"]]}},"sampleStatementResult":{"name":"sampleStatementResult","type":"apogee.JsonMember","updateData":{"data":{"fieldCount":0,"affectedRows":1,"insertId":4,"serverStatus":2,"warningCount":0,"message":"","protocol41":true,"changedRows":0}}}}},"dbConfig":{"name":"dbConfig","type":"apogee.Folder","children":{"getConnection":{"name":"getConnection","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"var mysql = require('mysql');\n\nreturn mysql.createConnection(config.data);","supplementalCode":""}},"getQueryPromise":{"name":"getQueryPromise","type":"apogee.FunctionMember","updateData":{"argList":["sql"],"functionBody":"let connection = getConnection();\n\nvar queryPromise = new Promise((resolve,reject) => {\n    connection.connect(function(err) {\n        if(err) {\n            reject(err.message);\n        }\n        else {    \n            connection.query(sql, function(err,result) {\n                if(err) {\n                    reject(err.message);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        }\n        connection.end();\n    });\n});\n\nreturn queryPromise;\n","supplementalCode":""}},"getPreparedQueryPromise":{"name":"getPreparedQueryPromise","type":"apogee.FunctionMember","updateData":{"argList":["sql","parameters"],"functionBody":"let connection = getConnection();\n\nvar queryPromise = new Promise((resolve,reject) => {\n    connection.connect(function(err) {\n        if(err) {\n            reject(err.message);\n        }\n        else {    \n            connection.query(sql, parameters, function(err,result) {\n                if(err) {\n                    reject(err.message);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        }\n        //just quit - don't bother handling an error for now\n        connection.end();\n    });\n});\n\nreturn queryPromise;","supplementalCode":""}},"config":{"name":"config","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"DB Configuration\"\n    },\n    {\n        type: \"textField\",\n        label: \"Host: \",\n        size: 40,\n        key: \"host\"\n    },\n    {\n        type: \"textField\",\n        label: \"User: \",\n        size: 40,\n        key: \"user\"\n    },\n    {\n        type: \"textField\",\n        label: \"Password: \",\n        size: 40,\n        key: \"password\"\n    },\n    {\n        type: \"textField\",\n        label: \"Database: \",\n        size: 40,\n        key: \"database\"\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"host":"localhost","user":"root","password":"admin","database":"conman"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"createUser":{"name":"createUser","type":"apogee.Folder","children":{"runCommandFlag":{"name":"runCommandFlag","type":"apogee.JsonMember","updateData":{"data":true}},"createUserSql":{"name":"createUserSql","type":"apogee.JsonMember","updateData":{"data":"insert into user_info (first_name,family_name,email,phone,pass_key) \nvalues (?,?,?,?,?);"}},"newUserParams":{"name":"newUserParams","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!inputOk) return apogeeutil.INVALID_VALUE;\n\nreturn [userInfo.firstName,userInfo.familyName,userInfo.email,userInfo.phone,passKey];","supplementalCode":""}},"createUserAction":{"name":"createUserAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return dbConfig.getPreparedQueryPromise(createUserSql,newUserParams);","supplementalCode":""}},"userInfo":{"name":"userInfo","type":"apogee.JsonMember","updateData":{"data":{"firstName":"Joe","familyName":"Blow","email":"blow@gmail.com","phone":"12345676890","password":"uuu"}}},"createUserForm":{"name":"createUserForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    admin.getCommandMessenger().dataCommand(\"userInfo\",formValue);\n}\n\nlet onClear = () => {\n    admin.getCommandMessenger().dataCommand(\"userInfo\",apogeeutil.INVALID_VALUE);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Create User\"\n    },\n    {\n        type: \"textField\",\n        label: \"First Name: \",\n        size: 40,\n        key: \"firstName\"\n    },\n    {\n        type: \"textField\",\n        label: \"Family Name: \",\n        size: 40,\n        key: \"familyName\"\n    },\n    {\n        type: \"textField\",\n        label: \"Email: \",\n        size: 40,\n        key: \"email\"\n    },\n    {\n        type: \"textField\",\n        label: \"Phone: \",\n        size: 40,\n        key: \"phone\"\n    },\n    {\n        type: \"textField\",\n        label: \"Password: \",\n        size: 40,\n        key: \"password\"\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        onCancel: onClear,\n        submitLabel: \"Submit\",\n        cancelLabel: \"Submit Empty Data\"\n    }\n]","supplementalCode":""}},"inputOk":{"name":"inputOk","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!userInfo) throw new Error(\"User Info is missing!\");\n\nif(!userInfo.firstName) throw new Error(\"First name is missing!\");\nif(!userInfo.familyName) throw new Error(\"Family name is missing!\");\nif(!userInfo.email) throw new Error(\"Email is missing!\");\nif(!userInfo.phone) throw new Error(\"Phone is missing!\");\nif(!userInfo.password) throw new Error(\"Password is missing!\");\n\n//fold in our test run flag\nif(!runCommandFlag) return false;\n\nreturn true;","supplementalCode":""}},"passKey":{"name":"passKey","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(inputOk) {\n    return encryption.getEncryptedPasswordPromise(userInfo.password);\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"createUserResult":{"name":"createUserResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!createUserAction) throw new Error(\"Unknown error creating session token\");\n\nif(createUserAction.affectedRows === 0) throw new Error(\"Internal Error: Failed to create new user\");\n\n//this shouldn't happen. I have no idea what it means. \nif(createUserAction.affectedRows > 1) throw new Error(\"Unkown error in user creation\");\n\nif(createUserAction.insertId) return createUserAction.insertId;\nelse return true;","supplementalCode":""}}}},"getUsers":{"name":"getUsers","type":"apogee.Folder","children":{"sql":{"name":"sql","type":"apogee.JsonMember","updateData":{"data":"select * from user_info;"}},"result":{"name":"result","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return dbConfig.getQueryPromise(sql);","supplementalCode":""}}}},"encryption":{"name":"encryption","type":"apogee.Folder","children":{"SALT_ROUNDS":{"name":"SALT_ROUNDS","type":"apogee.JsonMember","updateData":{"data":10}},"getEncryptedPasswordPromise":{"name":"getEncryptedPasswordPromise","type":"apogee.FunctionMember","updateData":{"argList":["rawPassword"],"functionBody":"if(rawPassword) {\n    let bcrypt = require(\"bcrypt\");\n    let encryptedPromise = new Promise( (resolve,reject) => {\n            bcrypt.hash(rawPassword, SALT_ROUNDS, function(err, hash) {\n                if(err) {\n                    reject(err);\n                }\n                else {\n                    resolve(hash);\n                }\n        });\n    })\n    return encryptedPromise;\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"isMatchPromise":{"name":"isMatchPromise","type":"apogee.FunctionMember","updateData":{"argList":["rawPassword","passKey"],"functionBody":"if((rawPassword)&&(passKey)) {\n    let bcrypt = require(\"bcrypt\");\n    let matchPromise = new Promise( (resolve,reject) => {\n        bcrypt.compare(rawPassword, passKey, function(err, result) {\n            if(err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    })\n    return matchPromise;\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}}}},"login":{"name":"login","type":"apogee.Folder","children":{"loginForm":{"name":"loginForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    admin.getCommandMessenger().dataCommand(\"loginInfo\",formValue);\n}\n\nlet onClear = () => {\n    admin.getCommandMessenger().dataCommand(\"loginInfo\",apogeeutil.INVALID_VALUE);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"User Info\"\n    },\n    {\n        type: \"textField\",\n        label: \"Email: \",\n        size: 50,\n        key: \"email\"\n    },\n    {\n        type: \"textField\",\n        label: \"Password: \",\n        size: 50,\n        password: true,\n        key: \"password\"\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        onCancel: onClear,\n        submitLabel: \"Submit\",\n        cancelLabel: \"Submit Empty Data\"\n    }\n]","supplementalCode":""}},"loginInfo":{"name":"loginInfo","type":"apogee.JsonMember","updateData":{"data":{"email":"sutter@intransix.com","password":"asdhasdf"}}},"passwordMatch":{"name":"passwordMatch","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(inputOk) {\n    let matchPromise = encryption.isMatchPromise(loginInfo.password,lookupUserResult.pass_key);\n    //here we throw an error if the password doesn't match that is different from not having a valid email\n    //we could return the same message instead.\n    return matchPromise.then( match => {\n        if(!match) throw new Error(\"The password does not match!\");\n        return match;\n    });\n}\n\n//if we get here we didn't have proper inputs\nreturn apogeeutil.INVALID_VALUE;","supplementalCode":""}},"runCommandFlag":{"name":"runCommandFlag","type":"apogee.JsonMember","updateData":{"data":true}},"lookupUserSql":{"name":"lookupUserSql","type":"apogee.JsonMember","updateData":{"data":"select * from user_info where email = ?; "}},"lookupUserAction":{"name":"lookupUserAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(inputOk) {\n    return dbConfig.getPreparedQueryPromise(lookupUserSql,[loginInfo.email]);\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"inputOk":{"name":"inputOk","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"//input validation\nif(!loginInfo) throw new Error(\"Login data missing\");\nif(!loginInfo.email) throw new Error(\"Email is missing!\");\nif(!loginInfo.password) throw new Error(\"Password is missing!\");\n\n//fold in our test run flag\nif(!runCommandFlag) return false;\n\nreturn true;","supplementalCode":""}},"lookupUserResult":{"name":"lookupUserResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!lookupUserAction) return apogee.INVALID_VALUE\n\n//user not found error\nif(lookupUserAction.length === 0) throw new Error(\"User not found!\");\n\n//We found multiple users. This shouldn't happen.\nif(lookupUserAction.length > 1) throw new Error(\"Unknown error: problem in email search result\");\n\nreturn lookupUserAction[0];","supplementalCode":""}},"startSessionSql":{"name":"startSessionSql","type":"apogee.JsonMember","updateData":{"data":"insert into user_session (session_token,user_id,expire_time,max_expire_time,session_data) \nvalues (?,?,?,?,?)"}},"sessionParams":{"name":"sessionParams","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!passwordMatch) return apogeeutil.INVALID_VALUE;\n\nlet sysTime = (new Date()).getTime();\n\nlet expireTime = sysTime + sessionManagement.SESSION_TIME_MS;\nlet maxExpireTime = sysTime + sessionManagement.SESSION_MAX_TIME_MS;\nlet sessionToken = sessionManagement.createSessionToken();\n\nreturn [sessionToken,lookupUserResult.user_id,expireTime,maxExpireTime,null];","supplementalCode":""}},"sessionTokenAction":{"name":"sessionTokenAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return dbConfig.getPreparedQueryPromise(startSessionSql,sessionParams);","supplementalCode":""}},"createSessionSuccess":{"name":"createSessionSuccess","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!sessionTokenAction) throw new Error(\"Unknown error creating session token\");\n\nif(sessionTokenAction.affectedRows === 0) throw new Error(\"Internal Error: Failed to create new session\");\n\n//this shouldn't happen. I have no idea what it means. \nif(sessionTokenAction.affectedRows > 1) throw new Error(\"Unkown error in session creation\");\n\nreturn true;","supplementalCode":""}},"sessionToken":{"name":"sessionToken","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(createSessionSuccess) return sessionParams[0];","supplementalCode":""}}}},"sessionManagement":{"name":"sessionManagement","type":"apogee.Folder","children":{"createSessionToken":{"name":"createSessionToken","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"//uh, this is a big random number that looks kind of like a guid\nreturn getTokenElement() + \"-\" + getTokenElement() + \"-\" + getTokenElement() + \"-\" + getTokenElement();","supplementalCode":"function getTokenElement() {\n    return Math.random().toString(36).substring(2, 15);    \n}"}},"SESSION_TIME_MS":{"name":"SESSION_TIME_MS","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"//30 minutes\nreturn 30*60*1000;","supplementalCode":""}},"SESSION_MAX_TIME_MS":{"name":"SESSION_MAX_TIME_MS","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"//1 day\nreturn 24*60*60*1000;","supplementalCode":""}}}},"checkSession":{"name":"checkSession","type":"apogee.Folder","children":{"loginForm":{"name":"loginForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    admin.getCommandMessenger().dataCommand(\"sessionToken\",formValue.sessionToken);\n}\n\nlet onClear = () => {\n    admin.getCommandMessenger().dataCommand(\"sessionToken\",apogeeutil.INVALID_VALUE);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Session\"\n    },\n    {\n        type: \"textField\",\n        label: \"Session Token: \",\n        size: 50,\n        key: \"sessionToken\"\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        onCancel: onClear,\n        submitLabel: \"Submit\",\n        cancelLabel: \"Submit Empty Data\"\n    }\n]","supplementalCode":""}},"runCommandFlag":{"name":"runCommandFlag","type":"apogee.JsonMember","updateData":{"data":true}},"inputOk":{"name":"inputOk","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"//input validation\nif(!sessionToken) throw new Error(\"Session token missing\");\n\n//fold in our test run flag\nif(!runCommandFlag) return false;\n\nreturn true;","supplementalCode":""}},"sessionToken":{"name":"sessionToken","type":"apogee.JsonMember","updateData":{"data":"9nu0xmaar2-4z33wgx6her-asatq6qh1qh-fxsz65cy4r"}},"lookupSessionSql":{"name":"lookupSessionSql","type":"apogee.JsonMember","updateData":{"data":"select * from user_session where session_token = ?; "}},"lookupSessionAction":{"name":"lookupSessionAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(inputOk) {\n    return dbConfig.getPreparedQueryPromise(lookupSessionSql,[sessionToken]);\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"sessionParams":{"name":"sessionParams","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(sessionResult.newExpireTime !== undefined) {\n    return [sessionResult.newExpireTime,lookupSessionResult.session_token]\n}","supplementalCode":""}},"lookupSessionResult":{"name":"lookupSessionResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!lookupSessionAction) return apogee.INVALID_VALUE\n\n//user not found error\nif(lookupSessionAction.length === 0) throw new Error(\"Session not found!\");\n\n//We found multiple users. This shouldn't happen.\nif(lookupSessionAction.length > 1) throw new Error(\"Unknown error: problem in session search result\");\n\nreturn lookupSessionAction[0];","supplementalCode":""}},"sessionResult":{"name":"sessionResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!lookupSessionResult) return apogeeutil.INVALID_VALUE;\n\nlet sysTime = (new Date()).getTime();\nlet timeToExpire = lookupSessionResult.expire_time - sysTime;\n\nif(timeToExpire > 0) {\n    let result = {\n        sessionValid: true\n    }\n    \n    //udpate the expiration time, if needed\n    if(lookupSessionResult.expire_time < lookupSessionResult.max_expire_time) {\n        let newExpireTime = lookupSessionResult.expire_time + sessionManagement.SESSION_TIME_MS;\n        if(newExpireTime > lookupSessionResult.max_expire_time) newExpireTime = lookupSessionResult.max_expire_time;\n    \n        result.newExpireTime = newExpireTime;\n    }\n    \n    return result;\n    \n}\nelse {\n    //for now we will handle this with an error. \n    throw new Error(\"Session is expired!\");\n    \n    //alternate if we don't want an error\n    //return {sessionValid: false}\n}","supplementalCode":""}},"updateSessionSql":{"name":"updateSessionSql","type":"apogee.JsonMember","updateData":{"data":"update user_session set expire_time = ? where session_token = ?; "}},"updateSessionSuccess":{"name":"updateSessionSuccess","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(sessionResult.newExpireTime) {\n    if(updateSessionAction.affectedRows === 1) return true;\n    else return false;\n}\nelse {\n    return null;\n}","supplementalCode":""}},"updateSessionAction":{"name":"updateSessionAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(sessionParams) return dbConfig.getPreparedQueryPromise(updateSessionSql,sessionParams);\nelse return null;","supplementalCode":""}},"sessionInfo":{"name":"sessionInfo","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    sessionToken: lookupSessionResult.session_token,\n\tuserId: lookupSessionResult.user_id,\n\tsessionData: lookupSessionResult.session_data\n}","supplementalCode":""}}}},"updateSessionData":{"name":"updateSessionData","type":"apogee.Folder","children":{"loginForm":{"name":"loginForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    admin.getCommandMessenger().dataCommand(\"sessionInfo\",formValue);\n}\n\nlet onClear = () => {\n    admin.getCommandMessenger().dataCommand(\"sessionInfo\",apogeeutil.INVALID_VALUE);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Session\"\n    },\n    {\n        type: \"textField\",\n        label: \"Session Token: \",\n        size: 50,\n        key: \"sessionToken\"\n    },\n    {\n        type: \"textarea\",\n        label: \"Session Data: \",\n        rows: 6,\n        cols: 50,\n        key: \"sessionData\"\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        onCancel: onClear,\n        submitLabel: \"Submit\",\n        cancelLabel: \"Submit Empty Data\"\n    }\n]","supplementalCode":""}},"runCommandFlag":{"name":"runCommandFlag","type":"apogee.JsonMember","updateData":{"data":true}},"inputOk":{"name":"inputOk","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"//input validation\nif(!sessionInfo.sessionToken) throw new Error(\"Session token missing\");\n\n//session data not needed\n\n//fold in our test run flag\nif(!runCommandFlag) return false;\n\nreturn true;","supplementalCode":""}},"sessionParams":{"name":"sessionParams","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(!inputOk) return apogeeutil.INVALID_VALUE;\n    \nlet sessionData = ((sessionInfo.sessionData !== null)||(sessionInfo.sessionData !== undefined)) ? sessionInfo.sessionData : null;\nreturn [sessionData,sessionInfo.sessionToken]","supplementalCode":""}},"updateSessionSql":{"name":"updateSessionSql","type":"apogee.JsonMember","updateData":{"data":"update user_session set session_data = ? where session_token = ?; "}},"updateSessionAction":{"name":"updateSessionAction","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(sessionParams) return dbConfig.getPreparedQueryPromise(updateSessionSql,sessionParams);\nelse return null;","supplementalCode":""}},"updateSessionSuccess":{"name":"updateSessionSuccess","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"if(updateSessionAction.affectedRows === 1) return true;\nelse return false;","supplementalCode":""}},"sessionInfonnn":{"name":"sessionInfonnn","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return updateSessionSuccess","supplementalCode":""}},"sessionInfo":{"name":"sessionInfo","type":"apogee.JsonMember","updateData":{"data":{"sessionToken":"9nu0xmaar2-4z33wgx6her-asatq6qh1qh-fxsz65cy4r","sessionData":"This is a test!"}}}}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"User Management"}]},{"type":"heading2","content":[{"type":"text","text":"Notes"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"I store the times as BIGINT(20) in the db, directly as a javscript time to which I added the session time(s). I need to check this and do it right."}]},{"type":"listItem","content":[{"type":"text","text":"I should figure out how I want to handle the return from a statement that is executed. I include a sample statement result below."}]},{"type":"listItem","content":[{"type":"text","text":"I need to figure out exactly how I want to handle failures if I make cells. I think I should allow success == false and throw exception with the user deciding, since there are different scenarios. (The same may apply to invalid value?)"}]},{"type":"listItem","content":[{"type":"text","text":"I should think about how I want to handle a failed login due to invalid user identifier (email or phone) or bad password. I think usually these look the same to a user."}]},{"type":"listItem","content":[{"type":"text","text":"I currently require both a email and password. And login currently only works on email. I should make only one required and a login can work with either. (The reason I require both is that I don't generate a dummy email/phone. I was thinking of putting the user id in it but didn't look up how. I also could reuse the _other_ value, maybe with an invalid marker."}]},{"type":"listItem","content":[{"type":"text","text":"while I am at this, I should clean up the phone number. I should get rid of any format characters."}]}]},{"type":"apogeeComponent","attrs":{"name":"sampleStatementResult","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Overview"}]},{"type":"paragraph","content":[{"type":"text","text":"This workspace has some functions for user management."}]},{"type":"apogeeComponent","attrs":{"name":"someUsers","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"someUsers":{"type":"apogeeapp.JsonCell","dataView":"Grid","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":120},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"sampleStatementResult":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"dbConfig":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Database Configuration"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the configuration for our database connections."}]},{"type":"apogeeComponent","attrs":{"name":"config","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets a connection."}]},{"type":"apogeeComponent","attrs":{"name":"getConnection","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets a promise for the given SQL query."}]},{"type":"apogeeComponent","attrs":{"name":"getQueryPromise","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets a promise for the parameterized SQL query."}]},{"type":"paragraph","content":[{"type":"text","text":"The parameters object should be an array of parameter values, given in the order specified in the SQL query."}]},{"type":"apogeeComponent","attrs":{"name":"getPreparedQueryPromise","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"getConnection":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"getQueryPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"getPreparedQueryPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"config":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"height":280,"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"createUser":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Create User"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"user info validation: all are required. (we should allow one or both for email and phone. I didn't set the db up for this though.)"}]},{"type":"listItem","content":[{"type":"text","text":"it hashes the user password"}]},{"type":"listItem","content":[{"type":"text","text":"it creates a user account"}]},{"type":"listItem","content":[{"type":"text","text":"if the user account fails it throws an exception"}]},{"type":"listItem","content":[{"type":"text","text":"the return value is the user id"}]}]},{"type":"heading2","content":[{"type":"text","text":"Test Inputs"}]},{"type":"apogeeComponent","attrs":{"name":"createUserForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"For development, we will save the above data in the form. We will also use the flag below and only run our query when this tells us to."}]},{"type":"apogeeComponent","attrs":{"name":"runCommandFlag","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Input"}]},{"type":"apogeeComponent","attrs":{"name":"userInfo","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is validation of the input:"}]},{"type":"apogeeComponent","attrs":{"name":"inputOk","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Create User Logic"}]},{"type":"paragraph","content":[{"type":"text","text":"Convert the password into an encrypted pass key"}]},{"type":"apogeeComponent","attrs":{"name":"passKey","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following should be one table"}]},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"createUserSql","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"newUserParams","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"createUserAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a slightly different version that I used on login. Here I return the inserted ID. There is other stuff I might want to return, like the message."}]},{"type":"apogeeComponent","attrs":{"name":"createUserResult","id":0,"state":""}}]}},"children":{"runCommandFlag":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"createUserSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"newUserParams":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"createUserAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"userInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"createUserForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"inputOk":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"passKey":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"createUserResult":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"getUsers":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Get Users"}]},{"type":"paragraph","content":[{"type":"text","text":"This is a simple test. Below is an SQL query we want to do."}]},{"type":"apogeeComponent","attrs":{"name":"sql","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the result:"}]},{"type":"apogeeComponent","attrs":{"name":"result","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"sql":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"result":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"encryption":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"apogeeComponent","attrs":{"name":"getEncryptedPasswordPromise","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"isMatchPromise","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"SALT_ROUNDS","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"heading2"}]}},"children":{"SALT_ROUNDS":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getEncryptedPasswordPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"isMatchPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"login":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Login"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"this takes email and password (we should allow phone login)"}]},{"type":"listItem","content":[{"type":"text","text":"it looks up the user by email"}]},{"type":"listItem","content":[{"type":"text","text":"if it does not find a user, it throws an exception"}]},{"type":"listItem","content":[{"type":"text","text":"if it finds a user, it compares the password."}]},{"type":"listItem","content":[{"type":"text","text":"if the password does not match it throws an exception"}]},{"type":"listItem","content":[{"type":"text","text":"it then creates a new session for the given user"}]},{"type":"listItem","content":[{"type":"text","text":"if the session create fails it throws an exception"}]},{"type":"listItem","content":[{"type":"text","text":"it returns the session token"}]}]},{"type":"heading2","content":[{"type":"text","text":"Test Inputs"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a form to log in"}]},{"type":"apogeeComponent","attrs":{"name":"loginForm","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"runCommandFlag","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Input"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is the entered user info:"}]},{"type":"apogeeComponent","attrs":{"name":"loginInfo","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a recommended cell to verify the input in a single place. We should check if this is valid:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Any time we use the input. This (assuming we have it) is adequate to tell us the input is as we expect."}]},{"type":"listItem","content":[{"type":"text","text":"If we are doing some logic that does not depend on the input or the internal workflow, and we want to avoid doing it if not necessary."}]}]},{"type":"apogeeComponent","attrs":{"name":"inputOk","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"User Data Lookup"}]},{"type":"paragraph","content":[{"type":"text","text":"The following three cells should ideally be combined into a single cell."}]},{"type":"paragraph","content":[{"type":"text","text":"The parameterized sql we will execute."}]},{"type":"apogeeComponent","attrs":{"name":"lookupUserSql","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Execution of this sql, with the parameters filled in."}]},{"type":"apogeeComponent","attrs":{"name":"lookupUserAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The result presented in a convenient form, either a single result or an error (or invalid if we are not doing a search)."}]},{"type":"apogeeComponent","attrs":{"name":"lookupUserResult","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Password Check"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we check if the user entered password matches the user account."}]},{"type":"apogeeComponent","attrs":{"name":"passwordMatch","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Session Token"}]},{"type":"apogeeComponent","attrs":{"name":"sessionParams","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following tables should be merged into one - in a statement success/fail cell"}]},{"type":"apogeeComponent","attrs":{"name":"startSessionSql","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we do the lookup."}]},{"type":"apogeeComponent","attrs":{"name":"sessionTokenAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we verify the lookup succeeded, and return true or have an error. (The value may also be INVALID if a dependency is INVALID.)"}]},{"type":"apogeeComponent","attrs":{"name":"createSessionSuccess","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Login Result"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we just give the session token or we have the error. This is the return value from a login."}]},{"type":"apogeeComponent","attrs":{"name":"sessionToken","id":0,"state":""}}]}},"children":{"loginForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"loginInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"passwordMatch":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"runCommandFlag":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"lookupUserSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"lookupUserAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"inputOk":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"lookupUserResult":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"startSessionSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"sessionParams":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionTokenAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"createSessionSuccess":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionToken":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"sessionManagement":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Session Management"}]},{"type":"apogeeComponent","attrs":{"name":"createSessionToken","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the length of time before a session expires, from start or from renew."}]},{"type":"apogeeComponent","attrs":{"name":"SESSION_TIME_MS","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the max time a session can last, including renews."}]},{"type":"apogeeComponent","attrs":{"name":"SESSION_MAX_TIME_MS","id":0,"state":""}}]}},"children":{"createSessionToken":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"SESSION_TIME_MS":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"SESSION_MAX_TIME_MS":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"checkSession":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Check Session"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"inputs: session token"}]},{"type":"listItem","content":[{"type":"text","text":"validation: session token present"}]},{"type":"listItem","content":[{"type":"text","text":"this looks up the entry for the given session token."}]},{"type":"listItem","content":[{"type":"text","text":"if there is no session token, it throws an exception"}]},{"type":"listItem","content":[{"type":"text","text":"if it gets a session, it checks if the session is expired. if it is expired it throws an exception. "}]},{"type":"listItem","content":[{"type":"text","text":"If the session is OK, it updates the session expiration time, if the session expire time is less than the max session expire time."}]},{"type":"listItem","content":[{"type":"text","text":"it returns the session token, the user id and the session data"}]}]},{"type":"heading2","content":[{"type":"text","text":"Test Inputs"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a form to log in"}]},{"type":"apogeeComponent","attrs":{"name":"loginForm","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"runCommandFlag","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Input"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is the entered session token:"}]},{"type":"apogeeComponent","attrs":{"name":"sessionToken","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a recommended cell to verify the input in a single place. We should check if this is valid:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Any time we use the input. This (assuming we have it) is adequate to tell us the input is as we expect."}]},{"type":"listItem","content":[{"type":"text","text":"If we are doing some logic that does not depend on the input or the internal workflow, and we want to avoid doing it if not necessary."}]}]},{"type":"apogeeComponent","attrs":{"name":"inputOk","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"User Data Lookup"}]},{"type":"paragraph","content":[{"type":"text","text":"The following three cells should ideally be combined into a single cell."}]},{"type":"paragraph","content":[{"type":"text","text":"The parameterized sql we will execute."}]},{"type":"apogeeComponent","attrs":{"name":"lookupSessionSql","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Execution of this sql, with the parameters filled in."}]},{"type":"apogeeComponent","attrs":{"name":"lookupSessionAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The result presented in a convenient form, either a single result or an error (or invalid if we are not doing a search)."}]},{"type":"apogeeComponent","attrs":{"name":"lookupSessionResult","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Valid Session Check"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we check if the user entered password matches the user account."}]},{"type":"apogeeComponent","attrs":{"name":"sessionResult","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Update Expire Time"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we will can not rely on INVALID_VALUE to process our results, since we don't want to ignore all downstream referrers. We need to track whether or not we do the action and, since we do not want to abort on failure, we need to have a failure "},{"type":"text","marks":[{"type":"italic"}],"text":"not"},{"type":"text","text":" be an error. "}]},{"type":"apogeeComponent","attrs":{"name":"sessionParams","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following tables should be merged into one - in a statement success/fail cell"}]},{"type":"apogeeComponent","attrs":{"name":"updateSessionSql","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we do a "},{"type":"text","marks":[{"type":"italic"}],"text":"conditional"},{"type":"text","text":" lookup. We would need to allow for this if we made an explicit request cell."}]},{"type":"apogeeComponent","attrs":{"name":"updateSessionAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we verify the lookup succeeded, and return true or have an error. (The value may also be INVALID if a dependency is INVALID.)"}]},{"type":"apogeeComponent","attrs":{"name":"updateSessionSuccess","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Check Session Result"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we will just return the session login information. If the session is expired this is current an error."}]},{"type":"apogeeComponent","attrs":{"name":"sessionInfo","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"loginForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"runCommandFlag":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false,"height":7000}}}}},"inputOk":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionToken":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"lookupSessionSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"lookupSessionAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"sessionParams":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"lookupSessionResult":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionResult":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"updateSessionSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"updateSessionSuccess":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"updateSessionAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"sessionInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"updateSessionData":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Update Session Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This page does an update to session data:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"inputs: session token, session data"}]},{"type":"listItem","content":[{"type":"text","text":"input validation: ..."}]},{"type":"listItem","content":[{"type":"text","text":"If input is ok, it sets the new value of session data onto the session with the given token."}]},{"type":"listItem","content":[{"type":"text","text":"On Error: If there is an error updating the session we do not throw an exception. Instead we flag an error. This is because it may not invalidate the request to have the session update fail."}]}]},{"type":"heading2","content":[{"type":"text","text":"Test Inputs"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a form to log in"}]},{"type":"apogeeComponent","attrs":{"name":"loginForm","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"runCommandFlag","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Input"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is the entered session token:"}]},{"type":"apogeeComponent","attrs":{"name":"sessionInfo","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a recommended cell to verify the input in a single place. We should check if this is valid:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Any time we use the input. This (assuming we have it) is adequate to tell us the input is as we expect."}]},{"type":"listItem","content":[{"type":"text","text":"If we are doing some logic that does not depend on the input or the internal workflow, and we want to avoid doing it if not necessary."}]}]},{"type":"apogeeComponent","attrs":{"name":"inputOk","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Update Session Data"}]},{"type":"apogeeComponent","attrs":{"name":"sessionParams","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following tables should be merged into one - in a statement success/fail cell"}]},{"type":"apogeeComponent","attrs":{"name":"updateSessionSql","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"updateSessionAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we verify the lookup succeeded, and return true or have an error. (The value may also be INVALID if a dependency is INVALID.)"}]},{"type":"apogeeComponent","attrs":{"name":"updateSessionSuccess","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Update Session Result"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we will just return the update success/failure"}]},{"type":"apogeeComponent","attrs":{"name":"sessionInfonnn","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"loginForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"runCommandFlag":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false,"height":7000}}}}},"inputOk":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionParams":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"updateSessionSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"updateSessionAction":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"updateSessionSuccess":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionInfonnn":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sessionInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}